<template>
<van-toast id="van-toast" />
<div>
  {{ showtickets }}
</div>
<van-dialog
    use-slot
    show="{{ showdialog }}"
    show-cancel-button
    bind:cancel="dialogOff"
    title="在这里回复噢"
    bind:confirm="ticketComplete"
>
    <van-collapse value="{{ pickerNames }}" bind:change="downDrop">
    <van-collapse-item icon="logistics" title="快速选择回复" name="1">
        <van-radio-group value="{{ quick }}" bind:change="quickGet" max="{{ 1 }}">
        <van-cell-group>
            <van-cell
                wx:for="{{ list }}"
                wx:key="index"
                title="{{ item }}"
                data-index="{{ index }}"
            >
            <van-radio
                catch:tap="noop"
                class="radioboxes-{{ index }}"
                name="{{ item }}"
            />
            </van-cell>
        </van-cell-group>
        </van-radio-group>
    </van-collapse-item>
    </van-collapse>
    <van-field
        value="{{ reply }}"
        type="textarea"
        placeholder="请输入回复"
        autosize
        border="{{ true }}"
        bind:input="replyGet"
    />
</van-dialog>
<div v-for="item in datas">
<van-collapse value="{{ activeNames }}" bind:change="onChange">
  <van-divider borderColor="#6495ed" />
  <van-collapse-item icon="todo-list-o" title="{{ item.schedule }}《{{ item.destination }}》\n{{ item.status }}" name="{{ item.id }}">
      <van-cell
      value="{{ item.name }}"
      icon="user-o"
      label="报修人"
      readonly
      />
      <van-cell 
      value="{{ item.owner }}"
      icon="user-circle-o"
      label="报修人学号"
      readonly
      />
      <van-cell 
      value="{{ item.phone }}"
      icon="phone-o"
      label="报修人电话"
      readonly
      />
      <van-cell 
      value="{{ item.destination }}"
      icon="location-o"
      label="报修人宿舍"
      readonly
      />
      <van-cell 
      value="{{ item.schedule }}"
      icon="coupon-o"
      label="报修班次"
      readonly
      />
      <van-cell 
      value="{{ item.title }}"
      icon="logistics"
      label="报修简述"
      type="textarea"
      autosize
      readonly
      />
      <van-cell
      value="{{ item.description }}"
      label="报修详情"
      icon="edit"
      type="textarea"
      autosize
      readonly
      />
      <van-cell
       v-if="item.status == '维修完成'"
       value="{{ item.reply }}"
       label="回复"
       type="textarea"
       autosize
       readonly
      />
      <van-row v-if="item.status != '维修完成'" >
        <van-col span="8" offset="2">
          <van-button type="danger" round plain bind:click="ticketReturn(item.id)" icon="cross">退单</van-button>
        </van-col>
        <van-col span="8" offset="6">
          <van-button type="primary" round plain bind:click="ticketReply(item.id)" icon="success">消单</van-button>
        </van-col>
      </van-row>
  </van-collapse-item>
</van-collapse>
</div>
</template>
<script>
import wepy from '@wepy/core'
import Dialog from '../components/vant/dialog/dialog'
import Toast from '../components/vant/toast/toast'
wepy.page({
  data: {
    activeNames: [''],
    datas: {

    },
    dispaly: 'None',
    ticketid: '',
    getTime: '',
    showtickets: '',
    reply: '',
    ticketid: '',
    list: ["您的问题已经处理完成，感谢您对NA的支持，祝您生活愉快！O(∩_∩)O",
            "您好，此问题不在我们服务范围之内，感谢您使用报修网，祝您生活愉快！",
            "您好，网管已上门维修，由于宿舍无人，请您重新报修"],
    pickerNames: [],
    quick: [],
    showdialog: false,
    reply: ''
  },
  methods: {
    onChange(event) { // 打开下拉
      console.log(event)
      this.activeNames=event.$wx.detail
    //   this.ticketid=event.$wx.detail[1]
    },
    ticketReply(e) {
        this.ticketid = e
        this.showdialog = true
    },
    replyGet(e) { // 拿用户的报修详情
        this.reply = e.$wx.detail
    },
    ticketComplete() {
        // console.log(this.reply)
        // console.log(this.ticketid)
        Toast.loading({
          message: 'wait...',
          forbidClick: true,
          mask: true,
          duration: 0
        });
        const _jwt = wx.getStorageSync('jwt')
        const jwt = JSON.parse(_jwt)
        wx.request({
            url: this.$app.$options.globalData.urlRequest + '/api/v1/ticket/finishticket',
            method: 'PUT',
            data: {
                jwt: this.jwt,
                id: this.ticketid,
                reply: this.reply,
            },
            header:{
                'Authorization': `Bearer ${ jwt }`
            },
            success: res=> {
              if(res.data.code == 204) {
                 // console.log('yes')
                wx.redirectTo({
                    url: './index'
                })
              } else {
                Toast.fail(res.data.message)
              }
            },
            fail: res=> {
                console.log(url)
                console.log('居然还能消单失败...?')
            }
        })
        this.reply = ''
        this.showdialog = false
        this.quick = ''

    },
    dialogOff() {
        this.showdialog = false
    },
    downDrop(e){ // 展示快速选择的下拉
      if(e){
        this.pickerNames = e.$wx.detail        
      }
    },
    quickGet(e) { // 快速选择标题
      this.quick = e.$wx.detail
      this.reply = this.quick
      this.pickerNames =  false
      console.log(this.quick)
    },
    noop() { },// 摆设
    ticketReturn(e) {
        Toast.loading({
          message: 'wait...',
          forbidClick: true,
          mask: true,
          duration: 0
        });
        this.ticketid = e
        const _jwt = wx.getStorageSync('jwt')
        const jwt = JSON.parse(_jwt)
        wx.request({
            url: this.$app.$options.globalData.urlRequest + '/api/v1/ticket/abortticket?ticketid=' + this.ticketid,
            method: 'DELETE',
            data: {
                jwt: this.jwt,
                ticketid: this.ticketid
            },
            header:{
                'Authorization': `Bearer ${ jwt }`
            },
            success: res=> {
              if(res.data.code == 204) {
                 wx.redirectTo({
                    url: './index'
                })
              } else {
                Toast.fail(res.data.message)
              }    
            },
            fail: res=> {
                console.log('退不掉，还有这种事？')
            }
        })
    }
  },
  onLoad: function() {// 加载未修单
    Toast.loading({
      message: '报修单祈祷中...',
      forbidClick: true,
      mask: true,
      duration: 0
    });
    const _jwt = wx.getStorageSync('jwt')
    if(_jwt){
      const jwt = JSON.parse(_jwt)
      wx.request({ 
        url: this.$app.$options.globalData.urlRequest + '/api/v1/ticket/getmywork',
        method: 'GET',
        data: {
          jwt: this.jwt,
          current: 1,
          pageSize: 100
        },
        header:{
          'Authorization': `Bearer ${ jwt }`
        },
        success: res => {
            // console.log(res)
            if(res.data.code == 200) {
               if(res.data.data){
                // console.log(res.data.data)
                this.datas=res.data.data
                setTimeout(() => { // 异步原因接口速度可能比组件渲染快，Toast的loading和clear的调用可能出现先后问题，导致无限loading
                Toast.clear()
              },500)
              }else{
                this.showtickets='无未修单'
                setTimeout(() => { // 异步原因接口速度可能比组件渲染快，Toast的loading和clear的调用可能出现先后问题，导致无限loading
                Toast.clear()
              },500)
            }
            // console.log(res)
            } else {
              Toast.fail(res.data.message)
            }
        },
        fail :res => {
          // console.log(res)
        }
      })
    }else{
      wx.redirectTo({
        url: '../login/index'
      })
    }
  }
})
</script>
<config>
{
  navigationBarTitleText: '我的工作',
  usingComponents: {
    "van-button": "../components/vant/button/index",
    "van-tabbar": "../components/vant/tabbar/index",
    "van-tabbar-item": "../components/vant/tabbar-item/index",
    "van-cell": "../components/vant/cell/index",
    "ttabbar": "../components/tabbar",
    "van-row": "../components/vant/row/index",
    "van-col": "../components/vant/col/index",
    "van-collapse": "../components/vant/collapse/index",
    "van-divider": "../components/vant/divider/index",
    "van-dialog": "../components/vant/dialog/index",
    "van-field": "../components/vant/field/index",
    "van-radio": "../components/vant/radio/index",
    "van-dropdown-menu": "../components/vant/dropdown-menu/index",
    "van-dropdown-item": "../components/vant/dropdown-item/index",
    "van-radio-group": "../components/vant/radio-group/index",
    "van-collapse-item": "../components/vant/collapse-item/index",
    "van-toast": "../components/vant/toast/index"

  }
}
</config>